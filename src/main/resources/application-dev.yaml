server:
  port: 8081
spring:
  security:
    oauth2:
      client:
        registration:
          keycloak:
            client-id: calio-server-application
            client-secret: ZNjj757uYKmmL0myyOvnWUiDeuYlrrNN
            authorization-grant-type: client_credentials
#            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            scope: openid, profile, email
        provider:
          keycloak:
            issuer-uri: http://localhost:8080/realms/calio
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8080/realms/calio
  datasource:
    url: jdbc:postgresql://localhost:5432/calio
    username: postgres
    password: admin
  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: none
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        generate_statistics: true
  flyway:
    enabled: true
    locations: classpath:db/migration
    user: calio_flyway_user
    password: flyway
  quartz:
    job-store-type: jdbc
    jdbc:
      initialize-schema: never
    properties:
      org.quartz:
        scheduler:
          timeZone: Asia/Almaty
        jobStore:
          class: org.springframework.scheduling.quartz.LocalDataSourceJobStore
          driverDelegateClass: org.quartz.impl.jdbcjobstore.PostgreSQLDelegate
          tablePrefix: QRTZ_
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${JAVA_MAIL_SENDER_USERNAME}
    password: ${JAVA_MAIL_SENDER_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true

logging:
  level:
    org.springframework.security: DEBUG
    org.springframework.security.web.access: DEBUG
    org.springframework.security.oauth2: DEBUG
    org.hibernate.stat: DEBUG
    com.boreebeko.calio.service: DEBUG

